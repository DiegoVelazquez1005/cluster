252  mkdir prueba
  253  cd pr
  254  cd prueba/
  255  clear
  256  kubectl create configmap db-config --from-literal=MYSQL_DATABASE=sqldb
  257  kubectl create secret generic db-secret --from-literal=MYSQL_ROOT_PASSWORD=rootpassword
  258  kubectl run mysql-pod --image=mysql --dry-run=client -o yaml > mysql-pod.yaml
  259  vi mysql-pod.yaml
  260  kubectl apply -f mysql-pod.yaml
  261  vi mysql-pod.yaml
  262  kubectl apply -f mysql-pod.yaml
  263  vi mysql-pod.yaml
  264  kubectl apply -f mysql-pod.yaml
  265  k apply -f mysql-pod.yaml
  266  kubectl apply -f mysql-pod.yaml
  267  vi mysql-pod.yaml
  268  kubectl apply -f mysql-pod.yaml
  269  vi mysql-pod.yaml
  270  kubectl apply -f mysql-pod.yaml
  271  kubectl get pods
  272  clear
  273  kubectl ge pods
  274  kubectl get pods
  275  kubectl exec -it mysql-pod -- mysql -u
  276  kubectl exec -it mysql-pod -- mysql -u root
  277  kubectl exec -it mysql-pod -- mysql
  278  kubectl exec -it mysql-pod -- mysql -p
  279  clear
  280  kubectl get deploys
  281  kubectl get deploy
  282  clear
  283  kubectl expose pod mysql-pod --port=3306 --target-port=3306
  284  kubectl get svc
  285  kubectl create configmap phpadmin-config --from-literal=PMA_HOST=10.104.208.73 --from-literal=PMA_PORT=3306
  286  kubectl create secret generic phpadmin-secret --from-literal=PMA_USER=root --from-literal=PMA_PASSWORD=rootpassword
  287  kubectl run php phpadmin-pod --image=phpmyadmin --dry-run=client -o yaml > phpadmin.yaml
  288  vi phpadmin.yaml
  289  kubectl get pods
  290  ls
  291  rm phpadmin.yaml
  292  kubectl run phpadmin-pod --image=phpmyadmin --dry-run=client -o yaml > phpadmin.yaml
  293  rm phpadmin.yaml
  294  vi phpadmin.yaml
  295  kubectl apply -f phpadmin.yaml
  296  kubectl get pods
  297  clear
  298  kubectl expose pod phpadmin-pod --type=NodePort --port=8099 --targert-port=80 --name=phpadmin-svc
  299  kubectl expose pod phpadmin-pod --type=NodePort --port=8099 --target-port=80 --name=phpadmin-svc
  300  kubectl get svc
  301  kubectl get nodes -o wide
  302  kubectl get pods
  303  kubectl get nodes -o wide
  304  kubectl get pods
  305  ls
  306  mkdir dock
  307  cd dock/
  308  vi Dockerfile
  309  vi index.php
  310  kubectl get nodes -o wide
  311  clear
  312  kubectl get svc
  313  vi index.php
  314  docker build -t diegovr10052000
  315  /
  316  docker build -t diegovr10052000/prueba .
  317  dnf install https://download.docker.com/linux/centos/8/x86_64/stable/Packages/containerd.io-1.3.7-3.1.el8.x86_64.rpm
  318  dnf install docker-ce
  319  cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF

  320  dnf install kubeadm -y
  321  dnf install docker-ce
  322  systemctl enable docker
  323  dnf install kubeadm -y
  324  docker build -t diegovr10052000/prueba .
  325  dnf install docker-ce
  326  clear
  327  dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo
  328  dnf install docker-ce docker-ce-cli containerd.io
  329  systemctl enable --now docker
  330  firewall-cmd --zone=public --add-masquerade --permanent
  331  firewall-cmd --reload
  332  curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  333  Copied
  334  chmod +x /usr/local/bin/docker-compose
  335  usermod -aG docker username
  336  docker build -t diegovr10052000/prueba .
  337  docker push diegovr10052000/prueba
  338  docker login
  339  docker push diegovr10052000/prueba
  340  kubectl run php-app-pod --image=diegovr10052000/prueba
  341  kubectl get pods
  342  clear
  343  kubectl expose pod php-app-pod --type=NodePort --port=8088 --target-port=80 --name=phpapp-svc
  344  kubectl get svc
  345  clear
  346  kubectl get pods
  347  kubectl exec -it mysql-pod -- mysql -p
  348  clear
  349  history